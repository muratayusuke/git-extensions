getCurrentBranch(){
    # msysgit can't recognize "grep --color"
   COLOR_NEVER=''
	IS_WINDOWS=`isWindows`
    if [ ${IS_WINDOWS} = "false" ]; then
        COLOR_NEVER=' --color=never'
    fi
    echo `git branch --no-color | grep '^*' ${COLOR_NEVER} | sed 's/*//' | sed 's/ //'`
}

isWindows(){
    if [ ! $OS ]; then
	    echo "false"
		exit
	fi
	
    OS_PREFIX=`echo $OS | cut -c 1-7`
    if [ $OS_PREFIX = "Windows" ]; then
	    echo "true"
	fi
}

echoError(){
    PREFIX=""
    POSTFIX=""
	IS_WINDOWS=`isWindows`
    if [ ${IS_WINDOWS} = "false" ]; then
	    PREFIX="\033[0;31m"
		POSTFIX="\033[0;39m"
	fi
    echo -e "\033[0;31m[ERROR] $@${POSTFIX}"
}

echoWarning(){
    PREFIX=""
    POSTFIX=""
	IS_WINDOWS=`isWindows`
    if [ ${IS_WINDOWS} = "false" ]; then
	    PREFIX="\033[0;33m"
		POSTFIX="\033[0;39m"
	fi
    echo -e "${PREFIX}[Warning] $@${POSTFIX}"
}

echoSuccess(){
    PREFIX=""
    POSTFIX=""
	IS_WINDOWS=`isWindows`
    if [ ${IS_WINDOWS} = "false" ]; then
	    PREFIX="\033[0;32m"
		POSTFIX="\033[0;39m"
	fi
    echo -e "${PREFIX}[SUCCESS] $@${POSTFIX}"
}

isBranchExist(){
    TARGET_BRANCH=$1

    IS_BRANCH_EXIST=`git branch | grep ${TARGET_BRANCH} | sed 's/*//' | sed 's/ //'`
    if [ ${IS_BRANCH_EXIST} ]; then
        echo "true"
    else
        echo "false"
    fi
}

runCmd(){
    CMD=$@
    echo "[git-ex][run] $CMD"
    eval $CMD
}